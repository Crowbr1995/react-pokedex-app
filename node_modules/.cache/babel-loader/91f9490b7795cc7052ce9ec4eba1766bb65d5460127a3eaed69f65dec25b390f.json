{"ast":null,"code":"var _jsxFileName = \"/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/PokedexEntry.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokedexEntry(_ref) {\n  _s();\n  let {\n    species\n  } = _ref;\n  const [description, setDescription] = useState(\"\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPokedexDescription = async () => {\n      try {\n        const response = await fetch(species.url);\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.detail);\n        }\n        const flavorTextEntries = data.flavor_text_entries;\n        const englishDescription = flavorTextEntries.find(entry => entry.language.name === \"en\");\n        if (!englishDescription) {\n          throw new Error(\"No English description available.\");\n        }\n        setDescription(englishDescription.flavor_text);\n        setError(null);\n      } catch (error) {\n        console.log(\"Error fetching Pokedex entries:\", error);\n        setDescription(\"\");\n        setError(\"Error fetching Pokedex entries.\");\n      }\n    };\n    fetchPokedexDescription();\n  }, [species.url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Pokedex Entry - Generation \", species.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(PokedexEntry, \"vJIL1Rp4lFCzxC7iW896wXtXm18=\");\n_c = PokedexEntry;\nvar _c;\n$RefreshReg$(_c, \"PokedexEntry\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PokedexEntry","_ref","_s","species","description","setDescription","error","setError","fetchPokedexDescription","response","fetch","url","data","json","ok","Error","detail","flavorTextEntries","flavor_text_entries","englishDescription","find","entry","language","name","flavor_text","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/PokedexEntry.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function PokedexEntry({ species }) {\n  const [description, setDescription] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPokedexDescription = async () => {\n      try {\n        const response = await fetch(species.url);\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(data.detail);\n        }\n\n        const flavorTextEntries = data.flavor_text_entries;\n        const englishDescription = flavorTextEntries.find(\n          (entry) => entry.language.name === \"en\"\n        );\n\n        if (!englishDescription) {\n          throw new Error(\"No English description available.\");\n        }\n\n        setDescription(englishDescription.flavor_text);\n        setError(null);\n      } catch (error) {\n        console.log(\"Error fetching Pokedex entries:\", error);\n        setDescription(\"\");\n        setError(\"Error fetching Pokedex entries.\");\n      }\n    };\n\n    fetchPokedexDescription();\n  }, [species.url]);\n\n  return (\n    <div>\n      <h2>Pokedex Entry - Generation {species.name}</h2>\n      {error ? <p>{error}</p> : <p>{description}</p>}\n    </div>\n  );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC9C,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,OAAO,CAACQ,GAAG,CAAC;QACzC,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElC,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,MAAM,CAAC;QAC9B;QAEA,MAAMC,iBAAiB,GAAGL,IAAI,CAACM,mBAAmB;QAClD,MAAMC,kBAAkB,GAAGF,iBAAiB,CAACG,IAAI,CAC9CC,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,IAAI,KAAK,IACrC,CAAC;QAED,IAAI,CAACJ,kBAAkB,EAAE;UACvB,MAAM,IAAIJ,KAAK,CAAC,mCAAmC,CAAC;QACtD;QAEAV,cAAc,CAACc,kBAAkB,CAACK,WAAW,CAAC;QAC9CjB,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdmB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEpB,KAAK,CAAC;QACrDD,cAAc,CAAC,EAAE,CAAC;QAClBE,QAAQ,CAAC,iCAAiC,CAAC;MAC7C;IACF,CAAC;IAEDC,uBAAuB,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACL,OAAO,CAACQ,GAAG,CAAC,CAAC;EAEjB,oBACEZ,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,GAAI,6BAA2B,EAACxB,OAAO,CAACoB,IAAI;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACjDzB,KAAK,gBAAGP,OAAA;MAAA4B,QAAA,EAAIrB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAGhC,OAAA;MAAA4B,QAAA,EAAIvB;IAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAAC7B,EAAA,CAzCuBF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}