{"ast":null,"code":"var _jsxFileName = \"/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/EvolutionImg.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EvolutionImg(_ref) {\n  _s();\n  let {\n    imageUrl\n  } = _ref;\n  const [imageData, setImageData] = useState(null);\n  useEffect(() => {\n    const fetchImageData = async () => {\n      try {\n        const response = await axios.get(imageUrl, {\n          responseType: 'arraybuffer'\n        });\n        const base64Data = btoa(new Uint8Array(response.data).reduce((data, byte) => data + String.fromCharCode(byte), ''));\n        const imageDataUrl = `data:image/jpeg;base64,${base64Data}`;\n        setImageData(imageDataUrl);\n      } catch (error) {\n        console.log('Error: ', error.message);\n      }\n    };\n    fetchImageData();\n  }, [imageUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: imageData ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageData,\n      alt: \"Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 62\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n_s(EvolutionImg, \"M4lFU6WvseGt6QPzUzgzw3+EuTU=\");\n_c = EvolutionImg;\nvar _c;\n$RefreshReg$(_c, \"EvolutionImg\");","map":{"version":3,"names":["EvolutionImg","_ref","_s","imageUrl","imageData","setImageData","useState","useEffect","fetchImageData","response","axios","get","responseType","base64Data","btoa","Uint8Array","data","reduce","byte","String","fromCharCode","imageDataUrl","error","console","log","message","_jsxDEV","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/EvolutionImg.js"],"sourcesContent":["export default function EvolutionImg({ imageUrl }) {\n    const [imageData, setImageData] = useState(null);\n  \n    useEffect(() => {\n      const fetchImageData = async () => {\n        try {\n          const response = await axios.get(imageUrl, { responseType: 'arraybuffer' });\n          const base64Data = btoa(\n            new Uint8Array(response.data).reduce((data, byte) => data + String.fromCharCode(byte), '')\n          );\n          const imageDataUrl = `data:image/jpeg;base64,${base64Data}`;\n          setImageData(imageDataUrl);\n        } catch (error) {\n          console.log('Error: ', error.message);\n        }\n      };\n  \n      fetchImageData();\n    }, [imageUrl]);\n  \n    return (\n      <div>\n        {imageData ? <img src={imageData} alt=\"Pokemon\" /> : <p>Loading image...</p>}\n      </div>\n    );\n  }\n  "],"mappings":";;;AAAA,eAAe,SAASA,YAAYA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC7C,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAACR,QAAQ,EAAE;UAAES,YAAY,EAAE;QAAc,CAAC,CAAC;QAC3E,MAAMC,UAAU,GAAGC,IAAI,CACrB,IAAIC,UAAU,CAACN,QAAQ,CAACO,IAAI,CAAC,CAACC,MAAM,CAAC,CAACD,IAAI,EAAEE,IAAI,KAAKF,IAAI,GAAGG,MAAM,CAACC,YAAY,CAACF,IAAI,CAAC,EAAE,EAAE,CAC3F,CAAC;QACD,MAAMG,YAAY,GAAI,0BAAyBR,UAAW,EAAC;QAC3DR,YAAY,CAACgB,YAAY,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAACG,OAAO,CAAC;MACvC;IACF,CAAC;IAEDjB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACEuB,OAAA;IAAAC,QAAA,EACGvB,SAAS,gBAAGsB,OAAA;MAAKE,GAAG,EAAExB,SAAU;MAACyB,GAAG,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGP,OAAA;MAAAC,QAAA,EAAG;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEV;AAAC/B,EAAA,CAzBqBF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}