{"ast":null,"code":"var _jsxFileName = \"/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/Evolution.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { capitalizeLetter } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Evolution(_ref) {\n  _s();\n  let {\n    pokemonName,\n    pokemon,\n    setPokemonData\n  } = _ref;\n  const [evolutionChain, setEvolutionChain] = useState([]);\n  useEffect(() => {\n    const fetchEvolutionChain = async () => {\n      try {\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemonName}`);\n        const data = await response.json();\n        const evolutionUrl = data.evolution_chain.url;\n        const evolutionResponse = await fetch(evolutionUrl);\n        const evolutionData = await evolutionResponse.json();\n        const chain = parseEvolutionChain(evolutionData.chain);\n        setEvolutionChain(chain);\n      } catch (error) {\n        console.log(\"Error fetching evolution chain:\", error);\n      }\n    };\n    fetchEvolutionChain();\n  }, [pokemonName]);\n  const parseEvolutionChain = evolutionData => {\n    const chain = [];\n    parseEvolutionData(evolutionData, chain);\n    return chain;\n  };\n  const parseEvolutionData = function (evolutionData, chain) {\n    let isFirstEvolution = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const name = evolutionData.species.name;\n    const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolutionData.species.url.split(\"/\").slice(-2, -1)}.png`;\n    let evolutionMethod = null;\n    let evolutionLevel = null;\n    let evolutionItem = null;\n    evolutionData.evolution_details.forEach(detail => {\n      if (detail.trigger.name === \"level-up\") {\n        if (name === \"espeon\" || name === \"umbreon\") {\n          evolutionMethod = \"Level up with Friendship\";\n          if (name === \"espeon\") {\n            evolutionMethod += \" during Daytime\";\n          } else if (name === \"umbreon\") {\n            evolutionMethod += \" during Nighttime\";\n          }\n        } else {\n          evolutionMethod = \"Level:\";\n          evolutionLevel = detail.min_level;\n        }\n      } else if (detail.trigger.name === \"use-item\") {\n        evolutionMethod = \"Use Item:\";\n        evolutionItem = detail.item.name;\n      } else if (detail.trigger.name === \"trade\") {\n        evolutionMethod = \"Trade with another Pokémon\";\n      } else if (detail.trigger.name === \"use-item-while-holding\") {\n        evolutionMethod = \"Level up while holding item\";\n        evolutionItem = detail.item.name;\n      } else if (detail.trigger.name === \"shed\") {\n        evolutionMethod = \"Shed\";\n        evolutionLevel = detail.min_level;\n      } else {\n        evolutionMethod = detail.trigger.name;\n      }\n    });\n    chain.push({\n      name,\n      imageUrl,\n      evolutionMethod,\n      evolutionLevel,\n      evolutionItem\n    });\n    if (evolutionData.evolves_to.length > 0) {\n      evolutionData.evolves_to.forEach(evolvesTo => {\n        parseEvolutionData(evolvesTo, chain, false);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Evolution Chain for \", capitalizeLetter(pokemon)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: evolutionChain.map((pokemonData, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setPokemonData(pokemonData.name),\n        children: [pokemonData.evolutionMethod && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", \"- \", pokemonData.evolutionMethod, pokemonData.evolutionLevel && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", pokemonData.evolutionLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), pokemonData.evolutionItem && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", capitalizeLetter(pokemonData.evolutionItem)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemonData.imageUrl,\n          alt: pokemonData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: capitalizeLetter(pokemonData.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Evolution, \"anzMa9lCriSjMqul0a+tXOWSixw=\");\n_c = Evolution;\nvar _c;\n$RefreshReg$(_c, \"Evolution\");","map":{"version":3,"names":["React","useEffect","useState","capitalizeLetter","jsxDEV","_jsxDEV","Evolution","_ref","_s","pokemonName","pokemon","setPokemonData","evolutionChain","setEvolutionChain","fetchEvolutionChain","response","fetch","data","json","evolutionUrl","evolution_chain","url","evolutionResponse","evolutionData","chain","parseEvolutionChain","error","console","log","parseEvolutionData","isFirstEvolution","arguments","length","undefined","name","species","imageUrl","split","slice","evolutionMethod","evolutionLevel","evolutionItem","evolution_details","forEach","detail","trigger","min_level","item","push","evolves_to","evolvesTo","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pokemonData","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/Evolution.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { capitalizeLetter } from '../../utils';\n\nexport default function Evolution({ pokemonName, pokemon, setPokemonData }) {\n  const [evolutionChain, setEvolutionChain] = useState([]);\n\n  useEffect(() => {\n    const fetchEvolutionChain = async () => {\n      try {\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemonName}`);\n        const data = await response.json();\n\n        const evolutionUrl = data.evolution_chain.url;\n        const evolutionResponse = await fetch(evolutionUrl);\n        const evolutionData = await evolutionResponse.json();\n\n        const chain = parseEvolutionChain(evolutionData.chain);\n        setEvolutionChain(chain);\n      } catch (error) {\n        console.log(\"Error fetching evolution chain:\", error);\n      }\n    };\n\n    fetchEvolutionChain();\n  }, [pokemonName]);\n\n  const parseEvolutionChain = (evolutionData) => {\n    const chain = [];\n    parseEvolutionData(evolutionData, chain);\n    return chain;\n  };\n\n  const parseEvolutionData = (evolutionData, chain, isFirstEvolution = true) => {\n    const name = evolutionData.species.name;\n    const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolutionData.species.url.split(\"/\").slice(-2, -1)}.png`;\n\n    let evolutionMethod = null;\n    let evolutionLevel = null;\n    let evolutionItem = null;\n\n    evolutionData.evolution_details.forEach((detail) => {\n      if (detail.trigger.name === \"level-up\") {\n        if (name === \"espeon\" || name === \"umbreon\") {\n          evolutionMethod = \"Level up with Friendship\";\n          if (name === \"espeon\") {\n            evolutionMethod += \" during Daytime\"\n          } else if (name === \"umbreon\") {\n            evolutionMethod += \" during Nighttime\"\n          }\n        } else {\n          evolutionMethod = \"Level:\";\n          evolutionLevel = detail.min_level;\n        }\n      } else if (detail.trigger.name === \"use-item\") {\n        evolutionMethod = \"Use Item:\";\n        evolutionItem = detail.item.name;\n      } else if (detail.trigger.name === \"trade\") {\n        evolutionMethod = \"Trade with another Pokémon\";\n      } else if (detail.trigger.name === \"use-item-while-holding\") {\n        evolutionMethod = \"Level up while holding item\";\n        evolutionItem = detail.item.name;\n      } else if (detail.trigger.name === \"shed\") {\n        evolutionMethod = \"Shed\";\n        evolutionLevel = detail.min_level;\n      } else {\n        evolutionMethod = detail.trigger.name;\n      }\n    });\n\n    chain.push({ name, imageUrl, evolutionMethod, evolutionLevel, evolutionItem });\n\n    if (evolutionData.evolves_to.length > 0) {\n      evolutionData.evolves_to.forEach((evolvesTo) => {\n        parseEvolutionData(evolvesTo, chain, false);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Evolution Chain for {capitalizeLetter(pokemon)}</h2>\n      <ul>\n        {evolutionChain.map((pokemonData, index) => (\n          <li key={index} onClick={() => (setPokemonData(pokemonData.name))}>\n            {pokemonData.evolutionMethod && (\n              <span>\n                {\" \"}\n                - {pokemonData.evolutionMethod}\n                {pokemonData.evolutionLevel && (\n                  <span> {pokemonData.evolutionLevel}</span>\n                )}\n                {pokemonData.evolutionItem && (\n                  <span> {capitalizeLetter(pokemonData.evolutionItem)}</span>\n                )}\n              </span>\n            )}\n            <img src={pokemonData.imageUrl} alt={pokemonData.name} />\n            <span>{capitalizeLetter(pokemonData.name)}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}