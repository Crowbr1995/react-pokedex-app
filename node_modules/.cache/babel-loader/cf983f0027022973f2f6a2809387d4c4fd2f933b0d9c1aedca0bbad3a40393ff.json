{"ast":null,"code":"var _jsxFileName = \"/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/Evolution.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Evolution(_ref) {\n  _s();\n  let {\n    pokemon\n  } = _ref;\n  const [evolutionChain, setEvolutionChain] = useState([]);\n  useEffect(() => {\n    const fetchEvolutionChain = async () => {\n      try {\n        const speciesResponse = await fetch(`https://pokeapi-cors-proxy.herokuapp.com/https://pokeapi.co/api/v2/pokemon-species/${pokemon}/`);\n        const speciesData = await speciesResponse.json();\n        const evolutionUrl = speciesData.evolution_chain.url;\n        const evolutionResponse = await fetch(`https://pokeapi-cors-proxy.herokuapp.com/${evolutionUrl}`);\n        const evolutionData = await evolutionResponse.json();\n        const chain = parseEvolutionChain(evolutionData.chain);\n        setEvolutionChain(chain);\n      } catch (error) {\n        console.log(\"Error fetching evolution chain:\", error);\n      }\n    };\n    fetchEvolutionChain();\n  }, [pokemon]);\n  const parseEvolutionChain = evolutionData => {\n    const chain = [];\n    parseEvolutionData(evolutionData, chain);\n    return chain;\n  };\n  const parseEvolutionData = (evolutionData, chain) => {\n    const name = evolutionData.species.name;\n    const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolutionData.species.url.split(\"/\").slice(-2, -1)}.png`;\n    chain.push({\n      name,\n      imageUrl\n    });\n    if (evolutionData.evolves_to.length > 0) {\n      evolutionData.evolves_to.forEach(evolvesTo => {\n        const evolutionMethod = evolvesTo.evolution_details[0].trigger.name;\n        parseEvolutionData(evolvesTo, chain);\n        chain.push({\n          evolutionMethod\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Evolution Chain for \", pokemon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: evolutionChain.map((pokemonData, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemonData.imageUrl,\n          alt: pokemonData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: pokemonData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), pokemonData.evolutionMethod && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" - Evolves by \", pokemonData.evolutionMethod]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Evolution, \"anzMa9lCriSjMqul0a+tXOWSixw=\");\n_c = Evolution;\nvar _c;\n$RefreshReg$(_c, \"Evolution\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Evolution","_ref","_s","pokemon","evolutionChain","setEvolutionChain","fetchEvolutionChain","speciesResponse","fetch","speciesData","json","evolutionUrl","evolution_chain","url","evolutionResponse","evolutionData","chain","parseEvolutionChain","error","console","log","parseEvolutionData","name","species","imageUrl","split","slice","push","evolves_to","length","forEach","evolvesTo","evolutionMethod","evolution_details","trigger","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pokemonData","index","src","alt","_c","$RefreshReg$"],"sources":["/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/Evolution.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Evolution({ pokemon }) {\n  const [evolutionChain, setEvolutionChain] = useState([]);\n\n  useEffect(() => {\n    const fetchEvolutionChain = async () => {\n      try {\n        const speciesResponse = await fetch(\n          `https://pokeapi-cors-proxy.herokuapp.com/https://pokeapi.co/api/v2/pokemon-species/${pokemon}/`\n        );\n        const speciesData = await speciesResponse.json();\n\n        const evolutionUrl = speciesData.evolution_chain.url;\n        const evolutionResponse = await fetch(\n          `https://pokeapi-cors-proxy.herokuapp.com/${evolutionUrl}`\n        );\n        const evolutionData = await evolutionResponse.json();\n\n        const chain = parseEvolutionChain(evolutionData.chain);\n        setEvolutionChain(chain);\n      } catch (error) {\n        console.log(\"Error fetching evolution chain:\", error);\n      }\n    };\n\n    fetchEvolutionChain();\n  }, [pokemon]);\n\n  const parseEvolutionChain = (evolutionData) => {\n    const chain = [];\n    parseEvolutionData(evolutionData, chain);\n    return chain;\n  };\n\n  const parseEvolutionData = (evolutionData, chain) => {\n    const name = evolutionData.species.name;\n    const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolutionData.species.url.split(\"/\").slice(-2, -1)}.png`;\n\n    chain.push({ name, imageUrl });\n\n    if (evolutionData.evolves_to.length > 0) {\n      evolutionData.evolves_to.forEach((evolvesTo) => {\n        const evolutionMethod = evolvesTo.evolution_details[0].trigger.name;\n        parseEvolutionData(evolvesTo, chain);\n        chain.push({ evolutionMethod });\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Evolution Chain for {pokemon}</h2>\n      <ul>\n        {evolutionChain.map((pokemonData, index) => (\n          <li key={index}>\n            <img src={pokemonData.imageUrl} alt={pokemonData.name} />\n            <span>{pokemonData.name}</span>\n            {pokemonData.evolutionMethod && (\n              <span> - Evolves by {pokemonData.evolutionMethod}</span>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC3C,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAChC,sFAAqFL,OAAQ,GAChG,CAAC;QACD,MAAMM,WAAW,GAAG,MAAMF,eAAe,CAACG,IAAI,CAAC,CAAC;QAEhD,MAAMC,YAAY,GAAGF,WAAW,CAACG,eAAe,CAACC,GAAG;QACpD,MAAMC,iBAAiB,GAAG,MAAMN,KAAK,CAClC,4CAA2CG,YAAa,EAC3D,CAAC;QACD,MAAMI,aAAa,GAAG,MAAMD,iBAAiB,CAACJ,IAAI,CAAC,CAAC;QAEpD,MAAMM,KAAK,GAAGC,mBAAmB,CAACF,aAAa,CAACC,KAAK,CAAC;QACtDX,iBAAiB,CAACW,KAAK,CAAC;MAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,KAAK,CAAC;MACvD;IACF,CAAC;IAEDZ,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,MAAMc,mBAAmB,GAAIF,aAAa,IAAK;IAC7C,MAAMC,KAAK,GAAG,EAAE;IAChBK,kBAAkB,CAACN,aAAa,EAAEC,KAAK,CAAC;IACxC,OAAOA,KAAK;EACd,CAAC;EAED,MAAMK,kBAAkB,GAAGA,CAACN,aAAa,EAAEC,KAAK,KAAK;IACnD,MAAMM,IAAI,GAAGP,aAAa,CAACQ,OAAO,CAACD,IAAI;IACvC,MAAME,QAAQ,GAAI,4EAA2ET,aAAa,CAACQ,OAAO,CAACV,GAAG,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE,MAAK;IAErJV,KAAK,CAACW,IAAI,CAAC;MAAEL,IAAI;MAAEE;IAAS,CAAC,CAAC;IAE9B,IAAIT,aAAa,CAACa,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;MACvCd,aAAa,CAACa,UAAU,CAACE,OAAO,CAAEC,SAAS,IAAK;QAC9C,MAAMC,eAAe,GAAGD,SAAS,CAACE,iBAAiB,CAAC,CAAC,CAAC,CAACC,OAAO,CAACZ,IAAI;QACnED,kBAAkB,CAACU,SAAS,EAAEf,KAAK,CAAC;QACpCA,KAAK,CAACW,IAAI,CAAC;UAAEK;QAAgB,CAAC,CAAC;MACjC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEjC,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAAoC,QAAA,GAAI,sBAAoB,EAAChC,OAAO;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtCxC,OAAA;MAAAoC,QAAA,EACG/B,cAAc,CAACoC,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACrC3C,OAAA;QAAAoC,QAAA,gBACEpC,OAAA;UAAK4C,GAAG,EAAEF,WAAW,CAACjB,QAAS;UAACoB,GAAG,EAAEH,WAAW,CAACnB;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzDxC,OAAA;UAAAoC,QAAA,EAAOM,WAAW,CAACnB;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC9BE,WAAW,CAACT,eAAe,iBAC1BjC,OAAA;UAAAoC,QAAA,GAAM,gBAAc,EAACM,WAAW,CAACT,eAAe;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACxD;MAAA,GALMG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrC,EAAA,CAhEuBF,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}