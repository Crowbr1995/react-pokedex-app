{"ast":null,"code":"var _jsxFileName = \"/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/Evolution.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Evolution(_ref) {\n  _s();\n  let {\n    pokemon,\n    species\n  } = _ref;\n  const [evolutionChain, setEvolutionChain] = useState([]);\n  const [selectedPokemon, setSelectedPokemon] = useState(null);\n  useEffect(() => {\n    const fetchEvolutionChain = async () => {\n      try {\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemon}`);\n        const data = await response.json();\n        const evolutionUrl = data.evolution_chain.url;\n        const evolutionResponse = await fetch(evolutionUrl);\n        const evolutionData = await evolutionResponse.json();\n        const chain = parseEvolutionChain(evolutionData.chain);\n        setEvolutionChain(chain);\n      } catch (error) {\n        console.log(\"Error fetching evolution chain:\", error);\n      }\n    };\n    fetchEvolutionChain();\n  }, [pokemon]);\n  const parseEvolutionChain = evolutionData => {\n    const chain = [];\n    parseEvolutionData(evolutionData, chain);\n    return chain;\n  };\n  const parseEvolutionData = (evolutionData, chain) => {\n    const {\n      species,\n      evolves_to\n    } = evolutionData;\n    const {\n      name\n    } = species;\n    const capitalized = capitalizeLetter(name);\n    chain.push({\n      name: capitalized,\n      evolvesTo: evolves_to.map(evolvesTo => ({\n        name: capitalizeLetter(evolvesTo.species.name),\n        method: getEvolutionMethod(evolvesTo.evolution_details)\n      }))\n    });\n    if (evolves_to.length > 0) {\n      evolves_to.forEach(evolvesTo => {\n        parseEvolutionData(evolvesTo, chain);\n      });\n    }\n  };\n  const capitalizeLetter = word => {\n    return word.split('-').map(part => part.charAt(0).toUpperCase() + part.slice(1)).join(' ');\n  };\n  const getEvolutionMethod = details => {\n    if (details.length === 0) return '';\n    const method = details[0].trigger.name;\n    const {\n      min_level,\n      item,\n      min_happiness,\n      time_of_day\n    } = details[0];\n    if (method === 'level-up') {\n      if (min_level) return `Level ${min_level}`;\n      if (item) return `Level up with ${capitalizeLetter(item.name)}`;\n      if (min_happiness) {\n        if (time_of_day) {\n          return `Level up with high friendship ${time_of_day === 'day' ? 'during daytime' : 'during nighttime'}`;\n        }\n        return `Level up with high friendship`;\n      }\n    } else if (method === 'use-item') {\n      return `Use ${capitalizeLetter(item.name)}`;\n    }\n    return '';\n  };\n  const handlePokemonClick = name => {\n    setSelectedPokemon(name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Evolution Chain for \", pokemon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: evolutionChain.map((pokemonData, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePokemonClick(pokemonData.name),\n          children: pokemonData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), selectedPokemon === pokemonData.name && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: pokemonData.evolvesTo.map((evolvesTo, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [evolvesTo.name, \" - \", evolvesTo.method]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Evolution, \"jAMCwxMKlcnDPetXieoX+hByJ7Y=\");\n_c = Evolution;\n;\nvar _c;\n$RefreshReg$(_c, \"Evolution\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Evolution","_ref","_s","pokemon","species","evolutionChain","setEvolutionChain","selectedPokemon","setSelectedPokemon","fetchEvolutionChain","response","fetch","data","json","evolutionUrl","evolution_chain","url","evolutionResponse","evolutionData","chain","parseEvolutionChain","error","console","log","parseEvolutionData","evolves_to","name","capitalized","capitalizeLetter","push","evolvesTo","map","method","getEvolutionMethod","evolution_details","length","forEach","word","split","part","charAt","toUpperCase","slice","join","details","trigger","min_level","item","min_happiness","time_of_day","handlePokemonClick","children","fileName","_jsxFileName","lineNumber","columnNumber","pokemonData","index","onClick","idx","_c","$RefreshReg$"],"sources":["/home/bryan-c/Documents/pokedex-app/src/components/PokemonData/Evolution.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Evolution({ pokemon, species }) {\n  const [evolutionChain, setEvolutionChain] = useState([]);\n  const [selectedPokemon, setSelectedPokemon] = useState(null);\n\n  useEffect(() => {\n    const fetchEvolutionChain = async () => {\n      try {\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemon}`);\n        const data = await response.json();\n\n        const evolutionUrl = data.evolution_chain.url;\n        const evolutionResponse = await fetch(evolutionUrl);\n        const evolutionData = await evolutionResponse.json();\n\n        const chain = parseEvolutionChain(evolutionData.chain);\n        setEvolutionChain(chain);\n      } catch (error) {\n        console.log(\"Error fetching evolution chain:\", error);\n      }\n    };\n\n    fetchEvolutionChain();\n  }, [pokemon]);\n\n  const parseEvolutionChain = (evolutionData) => {\n    const chain = [];\n    parseEvolutionData(evolutionData, chain);\n    return chain;\n  };\n\n  const parseEvolutionData = (evolutionData, chain) => {\n    const { species, evolves_to } = evolutionData;\n    const { name } = species;\n    const capitalized = capitalizeLetter(name);\n\n    chain.push({\n      name: capitalized,\n      evolvesTo: evolves_to.map(evolvesTo => ({\n        name: capitalizeLetter(evolvesTo.species.name),\n        method: getEvolutionMethod(evolvesTo.evolution_details)\n      }))\n    });\n\n    if (evolves_to.length > 0) {\n      evolves_to.forEach(evolvesTo => {\n        parseEvolutionData(evolvesTo, chain);\n      });\n    }\n  };\n\n  const capitalizeLetter = (word) => {\n    return word.split('-').map(part => part.charAt(0).toUpperCase() + part.slice(1)).join(' ');\n  };\n\n  const getEvolutionMethod = (details) => {\n    if (details.length === 0) return '';\n\n    const method = details[0].trigger.name;\n    const { min_level, item, min_happiness, time_of_day } = details[0];\n\n    if (method === 'level-up') {\n      if (min_level) return `Level ${min_level}`;\n      if (item) return `Level up with ${capitalizeLetter(item.name)}`;\n      if (min_happiness) {\n        if (time_of_day) {\n          return `Level up with high friendship ${time_of_day === 'day' ? 'during daytime' : 'during nighttime'}`;\n        }\n        return `Level up with high friendship`;\n      }\n    } else if (method === 'use-item') {\n      return `Use ${capitalizeLetter(item.name)}`;\n    }\n\n    return '';\n  };\n\n  const handlePokemonClick = (name) => {\n    setSelectedPokemon(name);\n  };\n\n  return (\n    <div>\n      <h2>Evolution Chain for {pokemon}</h2>\n      <ul>\n        {evolutionChain.map((pokemonData, index) => (\n          <li key={index}>\n            <button onClick={() => handlePokemonClick(pokemonData.name)}>{pokemonData.name}</button>\n            {selectedPokemon === pokemonData.name && (\n              <ul>\n                {pokemonData.evolvesTo.map((evolvesTo, idx) => (\n                  <li key={idx}>\n                    {evolvesTo.name} - {evolvesTo.method}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}